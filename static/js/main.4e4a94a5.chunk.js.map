{"version":3,"sources":["projectData.js","components/Projects.js","experienceData.js","components/Experience.js","components/Header.js","components/Skills.js","components/Hero.js","theme.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["projects","title","image","description","tools","github","link","Projects","as","mb","px","id","fontSize","fontWeight","pt","direction","spacing","my","map","project","index","flexWrap","justifyContent","md","w","base","borderRadius","boxShadow","src","alt","mx","order","casing","color","pb","disc","border","py","mr","href","target","rel","width","height","experience","exp","List","style","textDecoration","_hover","background","_focus","cursor","Header","Skills","Hero","d","className","justify","mt","isExternal","theme","extendTheme","styles","global","outline","boxSizing","margin","padding","scrollBehavior","body","bg","fontFamily","textRendering","a","App","maxWidth","Experience","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4e4a94a5.chunk.js","sourcesContent":["const projects = [\r\n    {\r\n      title: 'GroceryGo',\r\n      image: 'https://github.com/juanmndz/grocerygo-mern/raw/main/docs/gitimage.gif',\r\n      description: 'GroceryGo is a food delivery, grocery and local shopping platform developed with Node, React.Js, Express, and Mongo. Core functionality include full featured shopping cart, authentication, checkout, and admin management',\r\n      tools: ['React', 'Redux', 'MongoDB', 'JWT', 'Express'],\r\n      github: 'https://github.com/juanmndz/grocerygo-mern',\r\n      link: 'https://grocerygo.netlify.app/',\r\n    },\r\n    {\r\n      title: 'Amazon Clone',\r\n      image: 'https://github.com/juanmndz/amazon-clone/raw/main/docs/gitimage.gif',\r\n      description: 'Clone of Amazon Website (incl. authentication, catalog and shopping cart functionalities). Implemented with React, state management based on React Context API and Firebase integration',\r\n      tools: ['React', 'Firebase', 'HTML', 'CSS', 'Material-UI'],\r\n      github: 'https://github.com/juanmndz/amazon-clone',\r\n      link: 'https://fir-react-6980b.web.app/',\r\n    },\r\n    {\r\n      title: 'Discord Clone',\r\n      image: 'https://github.com/juanmndz/discord-clone/raw/main/docs/gitimage.gif',\r\n      description: 'Discord Clone with FERN stack (Firebase, Express, Reactjs, Nodejs) with core features of login system, channels, realtime chat, and emoji chat',\r\n      tools: ['React', 'Redux', 'Firebase', 'HTML', 'CSS', 'Material-UI'],\r\n      github: 'https://github.com/juanmndz/discord-clone',\r\n      link: 'https://discordapp-b6daf.web.app/',\r\n    },\r\n  ];\r\n  \r\n  export default projects;\r\n  ","import { Box, Flex, Text, Image, Stack, HStack } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport projects from '../projectData';\r\n\r\nfunction Projects() {\r\n  return (\r\n    <Box as=\"section\" mb=\"20\" px=\"5\" id=\"Projects\">\r\n      <Box as=\"header\" fontSize=\"2xl\" fontWeight=\"600\" pt=\"8\">\r\n        <h2>Projects</h2>\r\n      </Box>\r\n\r\n      <Stack direction={['column']} spacing=\"24\" my=\"7\">\r\n        {projects.map((project, index) => (\r\n          <Flex\r\n            key={index}\r\n            flexWrap=\"wrap\"\r\n            justifyContent={{ md: 'space-between' }}\r\n          >\r\n            <Box w={{ base: '100%', md: '50%' }}>\r\n              <Image\r\n                borderRadius=\".5rem\"\r\n                boxShadow=\"lg\"\r\n                w={['100%']}\r\n                src={project.image}\r\n                alt=\"Project\"\r\n              />\r\n            </Box>\r\n\r\n            <Flex\r\n              direction=\"column\"\r\n              my=\"3\"\r\n              mx=\"1\"\r\n              w={{ base: '100%', md: '40%' }}\r\n              justifyContent={{ md: 'center' }}\r\n              order={index & 1 && { md: '-1' }}\r\n            >\r\n              <Text\r\n                fontSize=\"2xl\"\r\n                casing=\"uppercase\"\r\n                color=\"tomato\"\r\n                fontWeight=\"600\"\r\n              >\r\n                {project.title}\r\n              </Text>\r\n              <p>{project.description}</p>\r\n\r\n              <Flex pb=\"2\" flexWrap=\"wrap\">\r\n                {project.tools.map((disc, index) => (\r\n                  <Box\r\n                    as=\"span\"\r\n                    border=\"1px\"\r\n                    color=\"border-color: rgba(31, 41, 55)\"\r\n                    borderRadius=\".5rem\"\r\n                    px=\"2\"\r\n                    py=\"1\"\r\n                    mr=\"6\"\r\n                    my=\"2\"\r\n                    fontSize=\"sm\"\r\n                    key={index}\r\n                  >\r\n                    {disc}\r\n                  </Box>\r\n                ))}\r\n              </Flex>\r\n              <HStack spacing=\"4\">\r\n                <a href={project.github} target=\"_blank\" rel=\"noreferrer\">\r\n                  <img\r\n                    src=\"./images/icons/github.svg\"\r\n                    color=\"#fff\"\r\n                    alt=\"link to github page\"\r\n                    width=\"24px\"\r\n                    height=\"24px\"\r\n                  />\r\n                </a>\r\n                <a href={project.link} target=\"_blank\" rel=\"noreferrer\">\r\n                  <img\r\n                    src=\"./images/icons/external-link.svg\"\r\n                    alt=\"link to live\"\r\n                    width=\"24px\"\r\n                    height=\"24px\"\r\n                  />\r\n                </a>\r\n              </HStack>\r\n            </Flex>\r\n          </Flex>\r\n        ))}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","const experience = [\r\n    {\r\n      title: 'Rettex.com - Full Stack Developer',\r\n      image: '/images/rettex.png',\r\n      description: 'Collaborated closely with product managers, designers, other engineers to plan, scope, build, and deploy core features in front and backend development with Node.JS, React.Js and Monogodb',\r\n      tools: ['React', 'Redux', 'MongoDB', 'JWT', 'Express', 'REST API', 'JSON', 'AGILE', 'CircleCi', 'CI/CD'],\r\n      link: 'https://rettex.com/',\r\n    }\r\n  ];\r\n  \r\n  export default experience;\r\n  ","import { Box, Flex, Text, Image, Stack, HStack } from '@chakra-ui/react';\r\nimport React from 'react';\r\nimport experience from '../experienceData';\r\n\r\nfunction Projects() {\r\n  return (\r\n    <Box as=\"section\" mb=\"20\" px=\"5\" id=\"Experience\">\r\n      <Box as=\"header\" fontSize=\"2xl\" fontWeight=\"600\" pt=\"8\">\r\n        <h2>Experience</h2>\r\n      </Box>\r\n\r\n      <Stack direction={['column']} spacing=\"24\" my=\"7\">\r\n        {experience.map((exp, index) => (\r\n          <Flex\r\n            key={index}\r\n            flexWrap=\"wrap\"\r\n            justifyContent={{ md: 'space-between' }}\r\n          >\r\n            <Box w={{ base: '100%', md: '50%' }}>\r\n              <Image\r\n                borderRadius=\".5rem\"\r\n                boxShadow=\"lg\"\r\n                w={['100%']}\r\n                src={exp.image}\r\n                alt=\"Experience\"\r\n              />\r\n            </Box>\r\n\r\n            <Flex\r\n              direction=\"column\"\r\n              my=\"3\"\r\n              mx=\"1\"\r\n              w={{ base: '100%', md: '40%' }}\r\n              justifyContent={{ md: 'center' }}\r\n              order={index & 1 && { md: '-1' }}\r\n            >\r\n              <Text\r\n                fontSize=\"2xl\"\r\n                casing=\"uppercase\"\r\n                color=\"skyblue\"\r\n                fontWeight=\"600\"\r\n              >\r\n                {exp.title}\r\n              </Text>\r\n              <p>{exp.description}</p>\r\n\r\n              <Flex pb=\"2\" flexWrap=\"wrap\">\r\n                {exp.tools.map((disc, index) => (\r\n                  <Box\r\n                    as=\"span\"\r\n                    border=\"1px\"\r\n                    borderRadius=\".5rem\"\r\n                    px=\"2\"\r\n                    py=\"1\"\r\n                    mr=\"6\"\r\n                    my=\"2\"\r\n                    fontSize=\"sm\"\r\n                    key={index}\r\n                  >\r\n                    {disc}\r\n                  </Box>\r\n                ))}\r\n              </Flex>\r\n              <HStack spacing=\"4\">\r\n                <a href={exp.link} target=\"_blank\" rel=\"noreferrer\">\r\n                  <img\r\n                    src=\"./images/icons/external-link.svg\"\r\n                    alt=\"link to live\"\r\n                    width=\"24px\"\r\n                    height=\"24px\"\r\n                  />\r\n                </a>\r\n              </HStack>\r\n            </Flex>\r\n          </Flex>\r\n        ))}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import { Box, Flex } from '@chakra-ui/react';\r\nimport React from 'react';\r\n\r\nconst List = ({ title }) => (\r\n  <a href={`#${title}`} style={{color: \"#fff\", textDecoration: 'none'}}>\r\n    <Box\r\n      pt=\"1\"\r\n      px=\"5\"\r\n      _hover={{ background: 'rgba(107, 114, 128)' }}\r\n      _focus={{ background: 'rgba(107, 114, 128)' }}\r\n      cursor=\"pointer\"\r\n      borderRadius=\".5rem\"\r\n      >\r\n      {title}\r\n    </Box>\r\n      </a>\r\n  );\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n    <Flex\r\n      justifyContent={{ base: 'center', md: 'flex-end' }}\r\n      fontWeight=\"100\"\r\n      fontSize={['sm', 'lg']}\r\n    >\r\n      <List title=\"Experience\" />\r\n      <List title=\"Projects\" />\r\n      <List title=\"Skills\" />\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { Box, Flex, Text } from '@chakra-ui/react'\r\nimport React from 'react'\r\n\r\nfunction Skills() {\r\n    return (\r\n        <Box as=\"section\" my=\"28\" px=\"5\" id=\"Skills\">\r\n        <Box as=\"header\" fontSize=\"2xl\" fontWeight=\"600\">\r\n          <h2>Skills</h2>\r\n        </Box>\r\n        <Flex\r\n            flexWrap=\"wrap\"\r\n            justifyContent={{ md: 'space-between' }}\r\n          >\r\n            <Box w={{ base: '100%', md: '50%' }} my=\"2\">\r\n            <Text color=\"#5a53d0\" fontWeight=\"550\">Front End:</Text> React.js, Redux, HTML,  CSS, SCSS,  JavaScript  ES5/ES6/ES7, DOM, Material Ui, Responsive Design\r\n            </Box>\r\n            <Box w={{ base: '100%', md: '50%' }} my=\"2\">\r\n            <Text color=\"#5a53d0\" fontWeight=\"550\">Backend:</Text>Nodejs, ExpressJs, REST API, JSON, Stripe, Authentication, Mongodb, PostgreSQL, AWS S3\r\n            </Box>\r\n            <Box w={{ base: '100%', md: '50%' }} my=\"2\">\r\n            <Text color=\"#5a53d0\" fontWeight=\"550\">Tooling:</Text>Docker, CircleCI, Git, CI/CD, Docker, Jest \r\n            </Box>\r\n            <Box w={{ base: '100%', md: '50%' }} my=\"2\">\r\n            <Text color=\"#5a53d0\" fontWeight=\"550\">Practices:</Text>Agile, Code Reviews, Pragmatic Coding, Unit and Integration testing, Best Practices\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n  \r\n    )\r\n}\r\n\r\nexport default Skills\r\n","import React from 'react';\r\nimport { Box, Text, Image, Flex, Link } from '@chakra-ui/react';\r\nimport './cursor.css';\r\n\r\nconst Hero = () => {\r\n  return (\r\n    <Box as=\"section\" my=\"8\" px=\"5\" id=\"hero\" d=\"flex\" flexWrap=\"wrap\">\r\n      <Flex direction=\"column\" w={{ base: '100%', md: '40%' }}>\r\n        <Text as=\"h2\" fontSize=\"5xl\" fontWeight=\"770\" pt=\"8\">\r\n          Hi There!\r\n        </Text>\r\n        <Text as=\"h3\" fontSize=\"3xl\" fontWeight=\"600\" pt=\"4\">\r\n          I’m Juan and I'm a Full-Stack Web Developer{' '}\r\n          <span className={'cursorText'} />\r\n        </Text>\r\n        {/* <Text as=\"span\" ml=\".5\"  borderRadius=\"1px\" width=\"1\" height=\"3\" bg=\"#fff\" fontSize=\"3x1\" sx={{animation: 'cursor 1s infinite'}}/> */}\r\n        {/* <span style={cursorStyle} /> */}\r\n\r\n        <Flex justify=\"space-between\" mt=\"4\">\r\n          <Link href=\"https://github.com/juanmndz\" isExternal>\r\n            <Image src={'./images/icons/github.svg'} w=\"10\" />\r\n          </Link>\r\n          <Link href=\"https://www.linkedin.com/in/jcmende2/\" isExternal>\r\n          <Image src={'./images/icons/linkedin.svg'} w=\"10\" />\r\n          </Link>\r\n          <Link href=\"https://medium.com/@juanmndz19\" isExternal>\r\n          <Image src={'./images/icons/medium.svg'} w=\"12\" />\r\n          </Link>\r\n        </Flex>\r\n      </Flex>\r\n      <Box w={{ base: '100%', md: '60%' }} my={{ base: '8' }}>\r\n        <Image src={'./images/illustrations/dev.svg'} w=\"100%\" />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","// theme.js\r\nimport { extendTheme } from \"@chakra-ui/react\"\r\n// Version 1: Using objects\r\nconst theme = extendTheme({\r\n  styles: {\r\n    global: {\r\n      // styles for the `body`\r\n      '.js-focus-visible': {\r\n        /*\r\n      This will hide the focus indicator if the element receives focus    via the mouse,\r\n      but it will still show up on keyboard focus.\r\n      */\r\n        outline: 'none',\r\n        boxShadow: 'none'\r\n      },\r\n      \"*, *::before, *::after\": {\r\n        boxSizing: \"border-box\",\r\n      },\r\n      'html, body': {\r\n        margin: 0,\r\n        padding: 0,\r\n        scrollBehavior: 'smooth'\r\n      },\r\n      body: {\r\n        bg: \"rgb(18, 18, 18)\",\r\n        color: \"rgba(255, 255, 255, 0.87)\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        margin: '0px',\r\n        padding: '0px',\r\n        fontFamily: 'Roboto, Arial, sans-serif',\r\n        textRendering: 'optimizelegibility'\r\n      },\r\n      // styles for the `a`\r\n      a: {\r\n        color: \"teal.500\",\r\n        _hover: {\r\n          textDecoration: \"underline\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme\r\n\r\n","import React from 'react';\nimport {\n  ChakraProvider,\n  Box,\n} from '@chakra-ui/react';\nimport Projects from './components/Projects';\nimport Experience from './components/Experience';\nimport Header from './components/Header';\nimport Skills from './components/Skills';\nimport Hero from './components/Hero';\nimport theme from './theme'\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <Box mx=\"auto\" my=\"10\" maxWidth=\"1024px\">\n        <Header />\n        <main>\n          <Hero />\n          <Experience />\n          <Projects />\n          <Skills />\n        </main>\n      </Box>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}